# VK API
import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType

# –î–æ–ø. –º–æ–¥—É–ª–∏
import random
import datetime
import requests
from bs4 import BeautifulSoup
from epiweeks import Week
import json

# –†–∞–±–æ—Ç–∞ —Å GoogleDocs
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# –î–µ–ª–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
urlGreetings = "https://heaclub.ru/originalnye-neobychnye-privetstviya-pri-vstreche-na-vse-sluchai-zhizni-spisok-privetstvennyh-slov-i-fraz-primery"

greetings_list = []

resp = requests.get(urlGreetings)
soup = BeautifulSoup(resp.content, features="html.parser")
greetings = soup.findAll('li')
for hello in greetings:
    greetings_list.append(hello.text)

# –î–µ–ª–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ—â–∞–Ω–∏—è
goodbye_list = ['–ü–æ–∫–∞-–ø–æ–∫–∞, —á–µ–ª–æ–≤–µ–∫...', '–ü–æ–∫–∞!\n–ë—É–¥—å –∑–¥–æ—Ä–æ–≤!', '–£–≤–∏–¥–∏–º—Å—è!', '–ü–æ–∫–∞, –±—ã–≤–∞–π', '–î–æ —Å–∫–æ—Ä–æ–≥–æ']

# –¢–æ–∫–µ–Ω –Ω–∞—à–µ–π –≥—Ä—É–ø–ø—ã
_TOKEN = '3d423eb8812629fc6834d96bd0b5352f75f83f7691f828ca84ac57b909bf2ff519f438bc6aa4d9316cc03'

vk = vk_api.VkApi(token=_TOKEN)

# –≠–º–æ–¥–∂–∏
_EMOJIS = ['üëª ','ü§° ','ü§ì ','üòÅ ','üòè ','üòõ ','üëã ']

# –ö–æ–º–∞–Ω–¥—ã
_COMMANDS = {
             '–ø—Ä–∏–≤–µ—Ç': 'random.choice(_EMOJIS)+random.choice(greetings_list[25:-40])',
             '–ø–æ–∫–∞': 'random.choice(_EMOJIS)+random.choice(goodbye_list)',
             '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ': 'weekNumber',
             '–∫–æ–º–∞–Ω–¥—ã': "üîß –ö–æ–º–∞–Ω–¥—ã:\n‚Ä¢ –ø—Ä–∏–≤–µ—Ç\n‚Ä¢ –ø–æ–∫–∞\n‚Ä¢ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n‚Ä¢ –¥–µ–¥–ª–∞–π–Ω—ã\n‚Ä¢ –ø–æ—á—Ç–∞\n‚Ä¢ —É—Ä–æ–≤–µ–Ω—å\n‚Ä¢ –∫–æ–º–∞–Ω–¥—ã",
             '–¥–µ–¥–ª–∞–π–Ω—ã': 'update_deadlines(client)',
             '–ø–æ—á—Ç–∞': "üì¨–õ–æ–≥–∏–Ω: appliedmath1900@yahoo.com\nüîí–ü–∞—Ä–æ–ª—å: PMstudents1900",
             '—É—Ä–æ–≤–µ–Ω—å': 'history_messages(session.user_id)'
             }

commands_list = list(_COMMANDS.keys())
messages_list = list(_COMMANDS.values())

# –§–æ—Ç–æ—á–∫–∏
_PICTURES = ['level.png','bye1.png','bye2.png','bye3.png','bye4.png','hello1.png','hello2.png','hello3.png','hello4.png','hello5.png','hello6.png','hello7.png']

# –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
with open('oddWeek.txt', 'r', encoding="utf-8") as file_odd, open('evenWeek.txt', 'r', encoding="utf-8") as file_even:
    oddWeek = file_odd.read()
    evenWeek = file_even.read()

# –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é, –º—ã –≤—ã—è–≤–∏–ª–∏ –æ–ø—ã—Ç–Ω—ã–º –ø—É—Ç—ë–º, —á—Ç–æ –Ω–∞—á–∞–ª–æ –Ω–µ–¥–µ–ª—å –¥–∞—Ç–∏—Ä—É–µ—Ç—Å—è 13.8.2019
weekNumber = Week.fromdate(datetime.date(2019,8,10)).weektuple()[-1]


# –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
def write_message(user_id, message):
    '''
    write_message(user_id, message) - –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º message.
    '''
    vk.method('messages.send', {
    'user_id': user_id,
    'message': message,
    'random_id': random.getrandbits(31) * random.choice([-1, 1])
    })

# –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
def send_photo(user_id, message, picture):
    '''
    send_photo(user_id, message, picture) - –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º message –∏ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π picture.
    '''
    picURLFromServer = vk.method("photos.getMessagesUploadServer") # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –í–ö –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ
    sendPicToServer = requests.post(picURLFromServer['upload_url'], files={'photo': open(picture, 'rb')}).json() # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ –Ω–∞ –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–º –≤—ã–¥–∞–ª VK Api Server
    savePicToServer = vk.method('photos.saveMessagesPhoto', {'photo': sendPicToServer['photo'], 'server': sendPicToServer['server'], 'hash': sendPicToServer['hash']})[0] # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞ –í–ö
    dataPic = f'photo{savePicToServer["owner_id"]}_{savePicToServer["id"]}' # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏

    vk.method("messages.send", { # –≤—ã—Å—ã–ª–∞–µ–º –Ω–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    'user_id': user_id,
    'message': message,
    'attachment': dataPic,
    'random_id': random.getrandbits(31) * random.choice([-1, 1])
     })

# –ú–µ—Ç–æ–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É—Ä–æ–≤–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞–ª–µ–ª—è
def history_messages(user_id):
    '''
    history_messages(user_id) - –∫–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –µ–≥–æ —É—Ä–æ–≤–Ω—è.
    '''
    history = vk.method('messages.getHistory', { # —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–æ—Ç–∞
        "user_id": user_id,
        "count": 200
    })
    count_messages = int(round(history['count']/2, 1))
    return {
    0 <= count_messages <= 20: f'üê• –£—Ä–æ–≤–µ–Ω—å 0.\n–í—ã –¥–∞–∂–µ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–ø—Ä–∏—Å—ã–ª–∞—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤, —á—Ç–æ —Å –≤–∞—Å –≤–∑—è—Ç—å...\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—â–µ–Ω–∏–π: {count_messages}',
    21 <= count_messages <= 40: f'üåù –£—Ä–æ–≤–µ–Ω—å 1.\n–í—ã –º–∞–ª—é—Å–µ–Ω—å–∫–∏–π –∏ –ø–æ–≥–∞–Ω–µ–Ω—å–∫–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∏–∫!\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—â–µ–Ω–∏–π: {count_messages}',
    41 <= count_messages <= 80: f'üåö –£—Ä–æ–≤–µ–Ω—å 2.\n–í—ã –º–∞–ª–µ–Ω—å–∫–∏–π –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ–≥–∞–Ω–µ—Ü!\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—â–µ–Ω–∏–π: {count_messages}',
    81 <= count_messages <= 200: f'üë®‚Äçüíª –£—Ä–æ–≤–µ–Ω—å 3.\n–í—ã –±–æ–ª—å—à–µ –Ω–µ –º–∞–ª—å–µ–Ω—å–∫–∏–π –ø–æ–≥–∞–Ω–µ—Ü, –≤—ã –±–æ–ª—å—à–æ–π –ø–æ–≥–∞–Ω–µ—Ü!\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—â–µ–Ω–∏–π: {count_messages}',
    count_messages >= 201: f'üèÖ –£—Ä–æ–≤–µ–Ω—å 4.\n–í–∞–º –µ—â—ë –Ω–µ –≤—ã–¥–∞–ª–∏ –ù–æ–±–µ–ª–µ–≤—Å–∫—É—é –ø—Ä–µ–º–∏—é?\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—â–µ–Ω–∏–π: {count_messages}'
    }[1]


# –î–∞–Ω–Ω—ã–µ –¥–ª—è GoogleDrive API
scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
creds = ServiceAccountCredentials.from_json_keyfile_name('client_secret.json', scope)
client = gspread.authorize(creds)

# –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
def update_deadlines(client):
    '''
    update_deadlines(client) - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü–µ –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Ç–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
    '''
    sheet = client.open('DeadlinesTable').sheet1 # –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É

    deadline_table = sheet.get_all_records() # –∑–∞–±–∏—Ä–∞–µ–º –æ—Ç—Ç—É–¥–∞ –≤—Å–µ –∑–∞–ø–∏—Å–∏

    all_deadlines = list(map(lambda x: list(x.values()), deadline_table)) # –∑–∞–±–∏—Ä–∞–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è
    str_rows = [list(map(str, row)) for row in all_deadlines] # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ —ç–ª–µ–µ–º–µ–Ω—Ç—ã –≤ —Ç–∞–±–ª–∏—Ü–µ –≤ string

    format_deadlines = [] # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –≤—Å—ë –±—ã–ª–æ –ø–æ –∫—Ä–∞—Å–æ—Ç–µ
    for row in str_rows:
        row[0]+=')'
        row[1]+=':'
        row[2]+=', –î–µ–¥–ª–∞–π–Ω –¥–æ:'
        format_deadlines.append(row)

    finally_deadlines = list(map(lambda x: ' '.join(x), format_deadlines)) # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ –≤ –ø—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Å –æ—Ç—Ñ–æ—Ä–º—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–µ–¥–ª–∞–π–Ω–∞–º–∏
    deadlines = '\n'.join(finally_deadlines) # –≤—ã–≤–æ–¥–∏–º –Ω–∞—à–∏ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏ –≥–æ—Ç–æ–≤–µ–Ω—å–∫–∏–µ –¥–µ–¥–ª–∞–π–Ω—ã
    return deadlines

# –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏
def text_button(label, color):
    '''
    button(label, color) - –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫.
    '''
    return {
        "action": {
            "type": "text",
            "label": label
        },
        "color": color
    }

# –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è —Å—Å—ã–ª–∫–∏
def link_button(link, label):
    '''
    link_button(link, label) - –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫-—Å—Å—ã–ª–æ–∫.
    '''
    return {
        "action": {
            "type": "open_link",
            "link": link,
            "label": label
        }
    }

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = {
    "one_time": False,
    "buttons": [
        [
            text_button("–ü—Ä–∏–≤–µ—Ç", "primary"),
            text_button("–ü–æ–∫–∞","primary")
        ],
        [
            text_button("–£—Ä–æ–≤–µ–Ω—å", "primary"),
            text_button("–ö–æ–º–∞–Ω–¥—ã","default"),
            text_button("–ü–æ—á—Ç–∞","primary")
        ],
        [
            text_button("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ","positive"),
            text_button("–î–µ–¥–ª–∞–π–Ω—ã","negative")
        ],
        [
            link_button('http://www.rating.unecon.ru/', "–ë–†–°"),
            link_button('https://student.unecon.ru/', "Moodle")
        ],
    ]
}

# –û—á–∏—â–∞–µ–º –≤—Å–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏
keyboard = json.dumps(keyboard, ensure_ascii=False).encode('utf-8')
keyboard = str(keyboard.decode('utf-8'))


longpoll = VkLongPoll(vk)

for session in longpoll.listen():
    if session.type == VkEventType.MESSAGE_NEW:
        if session.to_me:
            user_message = session.text

            if user_message.lower() == commands_list[0]: # –ø—Ä–∏–≤–µ—Ç
                send_photo(session.user_id, random.choice(_EMOJIS)+random.choice(greetings_list[25:-40]), random.choice(_PICTURES[5:13]))

            elif user_message.lower() == commands_list[1]: # –ø–æ–∫–∞
                send_photo(session.user_id, random.choice(_EMOJIS)+random.choice(goodbye_list),random.choice(_PICTURES[1:5]))

            elif user_message.lower() == commands_list[2]: # —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                if weekNumber%2 == 0:
                    write_message(session.user_id, evenWeek)
                else:
                    write_message(session.user_id, oddWeek)

            elif user_message.lower() == commands_list[3]: # –∫–æ–º–∞–Ω–¥—ã
                write_message(session.user_id, messages_list[3])

            elif user_message.lower() == commands_list[4]: # –¥–µ–¥–ª–∞–Ω—ã
                write_message(session.user_id, update_deadlines(client))

            elif user_message.lower() == commands_list[5]: # –ø–æ—á—Ç–∞
                write_message(session.user_id, messages_list[5])

            elif user_message.lower() == commands_list[6]: # –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–µ—Ä–µ–ø–∏—Å–∫–µ
                send_photo(session.user_id, history_messages(session.user_id), _PICTURES[0])


            elif user_message.lower() == "–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞" or user_message.lower() == "–Ω–∞—á–∞—Ç—å": # –æ–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                vk.method("messages.send", {
                            "user_id": session.user_id,
                            "message": "‚å® –ò—Å–ø–æ–ª—å–∑—É–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å–æ –º–Ω–æ–π",
                            "random_id": random.getrandbits(31) * random.choice([-1, 1]),
                            "keyboard": keyboard
                            })

            else:
                write_message(session.user_id, "–Ø —Ç—É–ø–æ–π –±–æ—Ç –∏ –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—à–µ–≥–æ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ —è–∑—ã–∫–∞...\n\n" + messages_list[3])
